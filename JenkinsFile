pipeline {

    // there will be more staff in here from the exam file
    agent {label 'docker' }

    // add docker credentials in the Jenkins part
    environment {
        DOCKER_IMAGE = "orbiton3005/my-image"
        DOCKER_CREDENTIALS = "dockerhub-credentials"
    }

    stages {
        //  stage('Install Docker') {
        //     steps {
        //         script {
        //             echo 'Installing Docker...'
        //             sh '''
        //             if ! command -v docker &> /dev/null
        //             then
        //                 echo "Docker could not be found, installing..."
        //                 apt-get update -y
        //                 apt-get install -y docker.io
        //                 systemctl enable docker
        //                 systemctl start docker
        //             else
        //                 echo "Docker is already installed"
        //             fi
        //             '''
        //         }
        //     }
        // }
        stage('Clone Repository') {
            steps {
                // I switch to docker branch to get the Dockerfile
                git branch: 'docker', url: 'https://github.com/or3005/devops.git'
            }
        }

        stage('Lint, Scan, and Docker') {
            parallel {
               stage('Lint') {
                    steps {
                        script {
                            echo 'Linting the code'
                          
                             sh 'pip3 install flake8'
                             sh 'flake8 . || true'
                             sh 'hadolint Dockerfile || true'
                        }
                    }
                }
                stage('Security Scanning') {
                    steps {
                        echo 'Running security scans'
                
                         sh 'trivy image $DOCKER_IMAGE || true'
                         sh 'bandit -r . || true'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo 'Building Docker image'
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

      stage('Push to Docker Hub') {
         steps {
            withDockerRegistry([credentialsId: DOCKER_CREDENTIALS, url: 'https://index.docker.io/v1/']) {
             sh '''
                docker push $DOCKER_IMAGE
                '''
        }
    }
}

    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check logs.'
        }
    }
}
